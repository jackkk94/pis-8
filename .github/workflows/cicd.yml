name: ci/cd

on:
  push:
    branches: ['master']
env:
  CR_REGISTRY: crpa0nrlk4sddkdrjoqd
  CR_REPOSITORY: my-first-registry
  IMAGE_TAG: image-counter
  CONTAINER_NAME: container-counter

jobs:
  # test:
  # runs-on: ubuntu-latest
  # strategy:
  #   matrix:
  #     node-version: [14.x]
  # steps:
  #   - uses: actions/checkout@v3
  #   - name: Use Node.js ${{ matrix.node-version }}

  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #     cache: 'npm'
  #   - name: install dependencies
  #     run: npm ci

  #   - name: run lint
  #     run: npm run lint

  #   - name: run test
  #     run: npm run test         
       
  build:
    # needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry

        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG


  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1
        env:
          IMAGE_URL: cr.yandex/crpa0nrlk4sddkdrjoqd/my-first-registry:image-counter
          SSH_KEY: ${{ secrets.SSH_KEY }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: b1g6rnmt9kmibh25asn9
          vm-name: epanchenkoe
          vm-service-account-id: ajegc790cl4bt7r0uoml
          vm-cores: 2
          vm-memory: 1 GB
          vm-core-fraction: 20
          vm-zone-id: ru-central1-b
          vm-subnet-id: e2loeruj3gmfdhtup2cj
          vm-disk-type: network-hdd
          vm-disk-size: 2GB
          user-data-path: './user-data.yaml'
          docker-compose-path: './docker-compose.yaml'
  # start:
  #   needs: deploy
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: executing remote ssh commands using ssh
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: "51.250.28.105"
  #         username: "epanchenko"
  #         key: ${{ secrets.SSH_KEY }}
  #         script: | 
  #           whoami
  #           curl -H Metadata-Flavor:Google 169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token | \
  #           cut -f1 -d',' | \
  #           cut -f2 -d':' | \
  #           tr -d '"' | \
  #           sudo docker login --username iam --password-stdin cr.yandex |
  #           sudo docker stop container-counter |
  #           sudo docker rmi -f cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:image-counter |
  #           sudo docker pull cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:image-counter |
  #           sudo docker run -d -p 3000:3000 --name container-counter --rm cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:image-counter
